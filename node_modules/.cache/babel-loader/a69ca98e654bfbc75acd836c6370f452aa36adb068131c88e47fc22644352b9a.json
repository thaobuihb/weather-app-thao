{"ast":null,"code":"var _jsxFileName = \"/Users/dinhngochien/Documents/Thao Bui/Github-Thao/Weather-app-React/weather-app-react-thao/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst api = {\n  key: \"148c4a9722ac89f59b5774d67e4746e8\",\n  base: \"https://api.openweathermap.org/data/2.5\"\n};\nfunction App() {\n  _s();\n  const [searchInput, setSearchInput] = useState(\"\");\n  const [searchCity, setSearchCity] = useState(\"\");\n  const [weatherInfo, setWeatherInfo] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [erroMessage, setErroMessage] = useState(false);\n  useEffect(() => {\n    const fetchWeatherData = async () => {\n      if (!searchCity) return;\n      setLoading(true);\n      // Process\n      try {\n        const url = `${api.base}weather?q=${searchCity}&units=metric&APPID=${api.key}`;\n        const respose = await fetch(url);\n        const data = await respose.json();\n        if (respose.ok) {\n          setWeatherInfo(JSON.stringify(data));\n          setErroMessage(\"\");\n        } else {\n          setErroMessage(data.message);\n        }\n      } catch (error) {\n        setErroMessage(error.message);\n      }\n      setLoading(false);\n    };\n    fetchWeatherData();\n  }, [searchCity]);\n  const handleSubmit = e => {\n    e.preventDefault();\n    setSearchCity(searchInput);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"City\",\n        value: searchInput,\n        onChange: e => setSearchInput(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: erroMessage ? /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: \"red\"\n        },\n        children: erroMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 23\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: weatherInfo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 75\n      }, this)\n    }, void 0, false)]\n  }, void 0, true);\n}\n_s(App, \"gws3u221Uh6B+uQdVw0Wo4sxqiI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","api","key","base","App","_s","searchInput","setSearchInput","searchCity","setSearchCity","weatherInfo","setWeatherInfo","loading","setLoading","erroMessage","setErroMessage","fetchWeatherData","url","respose","fetch","data","json","ok","JSON","stringify","message","error","handleSubmit","e","preventDefault","children","onSubmit","type","placeholder","value","onChange","target","fileName","_jsxFileName","lineNumber","columnNumber","style","color","_c","$RefreshReg$"],"sources":["/Users/dinhngochien/Documents/Thao Bui/Github-Thao/Weather-app-React/weather-app-react-thao/src/App.js"],"sourcesContent":["import React, {useState, useEffect} from \"react\";\n\nconst api = {\n  key: \"148c4a9722ac89f59b5774d67e4746e8\",\n  base: \"https://api.openweathermap.org/data/2.5\",\n}\n\n\nfunction App() {\n  const [searchInput, setSearchInput] = useState(\"\");\n  const [searchCity, setSearchCity] = useState (\"\");\n  const [weatherInfo, setWeatherInfo] = useState (\"\")\n  const [loading, setLoading] = useState (false);\n  const [erroMessage, setErroMessage] = useState(false);\n\n  useEffect(() => {\n    const fetchWeatherData = async () => {\n      if (! searchCity) return;\n      setLoading(true);\n      // Process\n      try {\n        const url = `${api.base}weather?q=${searchCity}&units=metric&APPID=${api.key}`\n        const respose = await fetch (url);\n        const data = await respose.json();\n        if (respose.ok) {\n          setWeatherInfo(JSON.stringify(data));\n          setErroMessage(\"\");\n        } else {\n          setErroMessage(data.message);\n        }\n      } catch (error) {\n        setErroMessage(error.message);\n        \n      }\n      setLoading(false);\n\n    }\n    fetchWeatherData();\n  }, [searchCity])\n\n  const handleSubmit = (e) =>{\n    e.preventDefault();\n    setSearchCity(searchInput);\n\n    \n  }\n  return (\n    <>\n    <form onSubmit={handleSubmit}>\n      <input type=\"text\" placeholder=\"City\" value={searchInput} onChange={(e) => setSearchInput(e.target.value)}></input>\n      <button>Search</button>\n    </form>\n    {loading ? (<div>Loading...</div>) : (\n      <>\n      {erroMessage ? (<div style={{color:\"red\"}} >{erroMessage}</div>) : (<div>{weatherInfo}</div>)}\n      </>\n    )}\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}